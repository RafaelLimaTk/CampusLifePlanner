@model SharedEventViewModel

<style>
    .fade-in {
        animation: fadeIn 1s ease-in-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-50px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="load-course d-flex justify-content-center align-items-center my-5 fade-in">
    <div class="modal-container rounded-3 border col-8 p-4">
        <div class="modal-header border-bottom-0">
            <h1 class="modal-title fs-3 mb-3 fade-in">Qual curso você quer compartilhar o evento?</h1>
        </div>
        <div class="modal-body py-2">
            <input id="EventId" hidden value="@Model.Event.Id" />
            <p class="fs-4 fade-in">
                @Model.Event.Title
            </p>
            <div class="mt-3 fade-in">
                <select class="form-select form-select-lg mb-3" id="CourseId" asp-items="@Model.Courses" aria-label="Escolha seu curso">
                    <option selected>Escolha o curso</option>
                </select>
            </div>
        </div>
        <div class="modal-footer m-0 fade-in">
            <div>
                <a class="btn btn-outline-success scalable-button fp-share" onclick="shareEvent();">
                    Compartilhar
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/connectionHub")
            .configureLogging(signalR.LogLevel.Information)
            .withAutomaticReconnect()
            .build();

        debugger;
        connection.start().then(() => {
            console.log("Conexão SignalR estabelecida!");
        }).catch(err => {
            console.error("Erro ao conectar ao SignalR:", err);
        });
        
        function shareEvent() {
            const eventId = document.getElementById("EventId").value;
            const courseId = document.getElementById("CourseId").value;

            if (connection.state === signalR.HubConnectionState.Connected) {
                connection.invoke("ShareEvent", eventId, courseId)
                    .catch(err => console.error(err));
            } else {
                console.error("Conexão não está estabelecida");
            }
        }

        connection.on("EventShared", (eventId, targetCourseId) => {
            console.log("ok");
        });

    </script>
} 